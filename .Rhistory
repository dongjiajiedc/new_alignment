R.home()
q()
devtools::install_github('xzhoulab/SPARK')
q()
devtools::install_github('xzhoulab/SPARK')
q()
devtools::install_github('xzhoulab/SPARK')
q()
devtools::install_github('xzhoulab/SPARK')
q()
devtools::install_github('xzhoulab/SPARK')
R.home()
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
devtools::install_github('xzhoulab/SPARK')
-v
clang -v
千（
q()
devtools::install_github('xzhoulab/SPARK')
q()
devtools::install_github('xzhoulab/SPARK')
library(Rcpp)
devtools::install_github('xzhoulab/SPARK')
devtools::install_github('xzhoulab/SPARK')
q()
if (!requireNamespace("BiocManager", quietly=TRUE))
install.packages("BiocManager")
BiocManager::install("splatter")
BiocManager::install("splatter")
library(splatter)
browseVignettes("splatter")
quit()
q()
suppressPackageStartupMessages({
library(SingleCellExperiment)
library(scMerge)
library(scater)
})
data("example_sce", package = "scMerge")
adata <- read.csv('.')
pwd
getdir()
getpwd()
getwd()
setwd(/Users/dongjiajie/Desktop/alignment/fyp/hyperalignment
setwd('/Users/dongjiajie/Desktop/alignment/fyp/hyperalignment
')
setwd('/Users/dongjiajie/Desktop/alignment/fyp/hyperalignment')
adata = read.csv('./data12.h5ad')
adata = read.csv('../data12.h5ad')
adata = read.csv('./data12.h5ad')
adata = readlibrary(zellkonverter)
library(zellkonverter)
adata = readH5AD('./data12.h5ad')
adata
adata$X
adata$Xassyas
adata.X
adata['X']
View(adata)
adata@assays@data@listData[["X"]]
adata@X
example_sce = runPCA(example_sce, exprs_values = "logcounts")
adata = runPCA(adata)
adata = runPCA(adata,exprs_values='X')
q
adata
scater::plotPCA(
example_sce,
colour_by = "cellTypes",
shape_by = "batch")
scater::plotPCA(
adata,
colour_by = "cellTypes",
shape_by = "batch")
scater::plotPCA(
adata,
colour_by = "celltype",
shape_by = "batch")
View(example_sce)
adata = runPCA(adata,exprs_va
)
adata = runPCA(adata,exprs_values='X')
install.packages(Matrix)
install.packages(atrix)
library(Matrix)
install.packages(Matrix)
install.packages('matrix')
install.packages('Matrix')
library(Matrix)
adata = runPCA(adata,exprs_values='X')
suppressPackageStartupMessages({
library(SingleCellExperiment)
library(scMerge)
library(scater)
})
adata
adata = runPCA(adata,exprs_values='X')
install.packages('Matrix')
install.packages('Matr
)
;
)
''
)
adata = runPCA(adata,exprs_values='')
adata = runPCA(adata)
adata@X
adata@assays@data@listData@X
View(adata)
View(adata)
adata@assays@data@listData[["X"]]
adata@assays@data@listData[["count"]] = as.double(adata@assays@data@listData[["X"]])
View(example_sce)
class(adata@assays@data@listData[["count"]])
example_sce@assays@data@listData[["counts"]]
example_sce@assays@data@listData[["logcounts"]]
example_sce@assays@data@listData[["counts"]]
View(adata)
adata@assays@data@listData[["X"]]
adata@assays@data@listData[["count"]]
adata@assays@data@listData[["X"]]
adata@assays@data@listData[["X"]]
example_sce = runPCA(adata, exprs_values = "count")
adata@assays@data@listData[["X"]]
adata@assays@data@listData[["X"]]array <- array(as.vector(adata@assays@data@listData[["X"]]), dim = dim(adata@assays@data@listData[["X"]]))
array <- array(as.vector(adata@assays@data@listData[["X"]]), dim = dim(adata@assays@data@listData[["X"]]))
array
array[0]
array[0][0]
adata@assays@data@listData[["count"]] <- array(as.vector(adata@assays@data@listData[["X"]]), dim = dim(adata@assays@data@listData[["X"]]))
example_sce = runPCA(adata, exprs_values = "count")
View(example_sce)
example_sce
adata@assays@data@listData[["count"]] <- array(as.vector(adata@assays@data@listData[["X"]]), dim = dim(adata@assays@data@listData[["X"]]))
example_sce
scater::plotPCA(
example_sce,
colour_by = "cellTypes",
shape_by = "batch")
scater::plotPCA(
example_sce,
colour_by = "celltype",
shape_by = "batch")
genes = read.csv('./high_genes.csv',header=FALSE)
genes
genes <- as.array(genes)
genes <- as.character(genes)
genes
scMerge_unsupervised <- scMerge(
sce_combine = example_sce,
ctl = genes,
kmeansK = c(3, 3),
assay_name = "scMerge_unsupervised")
scMerge_unsupervised <- scMerge(
sce_combine = example_sce,
ctl = genes,
kmeansK = c(3, 3),
assay_name = "scMerge_unsupervised")
scMerge_unsupervised <- scMerge(
sce_combine = example_sce,
ctl = genes,
kmeansK = c(3, 3),
assay_name = "scMerge_unsupervised")
scMerge_unsupervised <- scMerge(
sce_combine = example_sce,
ctl = genes,
kmeansK = c(3, 3),
assay_name = "scMerge_unsupervised",exprs_values='count')
example_sce@assays@data@listData[["logcounts"]] <- array(as.vector(example_sce@assays@data@listData[["X"]]), dim = dim(example_sce@assays@data@listData[["X"]]))
scMerge_unsupervised <- scMerge(
sce_combine = example_sce,
ctl = genes,
kmeansK = c(3, 3),
assay_name = "scMerge_unsupervised")
scMerge_unsupervised
scMerge_unsupervised <- scMerge(
sce_combine = example_sce,
kmeansK = c(3, 3),
assay_name = "scMerge_unsupervised")
data("example_sce", package = "scMerge")
View(example_sce)
data("example_sce", package = "scMerge")
